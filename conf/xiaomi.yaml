###
### Integrations ###

# Xiaomi gateway
xiaomi_aqara:
  discovery_retry: 5
  gateways:
    - key: !secret xiaomi_gateway_key

# Fans (humidifiers)
fan:
  - platform: xiaomi_miio
    host: 192.168.1.93
    token: !secret xiaomi_humfan_bedroom_token 
  - platform: xiaomi_miio
    host: 192.168.1.92
    token: !secret xiaomi_humfan_livingroom_1_token
  - platform: xiaomi_miio
    host: 192.168.1.86
    token: !secret xiaomi_humfan_livingroom_2_token

# Yeelight
yeelight:
  devices:
    192.168.1.87:
      name: yeelight_bedroom_ceiling_light
      model: ceiling13
      nightlight_switch_type: light

###
### Sensors ###

sensor:
## Уровни заряда батарей ##
  - platform: template
    sensors:
      xiaomi_thp_bedroom_battery:
        friendly_name: "Заряд в датчике THP в комнате"
        unit_of_measurement: '%'
        value_template: "{{ state_attr('sensor.xiaomi_thp_temperature_bedroom_158d00025f03f5', 'battery_level') }}"
        device_class: battery
  - platform: template
    sensors:
      xiaomi_thp_bathroom_battery:
        friendly_name: "Заряд в датчике THP в ванной"
        unit_of_measurement: '%'
        value_template: "{{ state_attr('sensor.xiaomi_thp_temperature_bathroom_158d00025f14c5', 'battery_level') }}"
        device_class: battery
  - platform: template
    sensors:
      xiaomi_thp_balcony_battery:
        friendly_name: "Заряд в датчике THP на балконе"
        unit_of_measurement: '%'
        value_template: "{{ state_attr('sensor.xiaomi_thp_temperature_balcony_158d0002389f84', 'battery_level') }}"
        device_class: battery
  - platform: template
    sensors:
      xiaomi_thp_livingroom_battery:
        friendly_name: "Заряд в датчике THP в гостиной"
        unit_of_measurement: '%'
        value_template: "{{ state_attr('sensor.xiaomi_thp_temperature_livingroom_158d00046581b5', 'battery_level') }}"
        device_class: battery
  - platform: template
    sensors:
      xiaomi_thp_cloackroom_battery:
        friendly_name: "Заряд в датчике THP в гардеробе"
        unit_of_measurement: '%'
        value_template: "{{ state_attr('sensor.xiaomi_thp_temperature_cloackroom_158d0004656f6d', 'battery_level') }}"
        device_class: battery
  - platform: template
    sensors:
      xiaomi_thp_corridor_battery:
        friendly_name: "Заряд в датчике THP в коридоре"
        unit_of_measurement: '%'
        value_template: "{{ state_attr('sensor.xiaomi_thp_temperature_corridor_158d000465887b', 'battery_level') }}"
        device_class: battery
  - platform: template
    sensors:
      xiaomi_wall_switch_bedroom_battery:
        friendly_name: "Заряд в выключателе в спальне"
        unit_of_measurement: '%'
        value_template: "{{ state_attr('binary_sensor.xiaomi_wall_switch_bedroom_158d000230d4a2', 'battery_level') }}"
        device_class: battery
  - platform: template
    sensors:
      xiaomi_exit_switch_lobby_battery:
        friendly_name: "Заряд в кнопке на выходе"
        unit_of_measurement: '%'
        value_template: "{{ state_attr('binary_sensor.xiaomi_exit_switch_lobby_158d0002135c59', 'battery_level') }}"
        device_class: battery
  - platform: template
    sensors:
      xiaomi_water_leak_bedroom_battery:
        friendly_name: "Заряд в датчике протечки 1 в ванной"
        unit_of_measurement: '%'
        value_template: "{{ state_attr('binary_sensor.xiaomi_water_leak_bedroom_158d00027b0cd4', 'battery_level') }}"
        device_class: battery
  - platform: template
    sensors:
      xiaomi_water_leak_bedroom_2_battery:
        friendly_name: "Заряд в датчике протечки 2 в ванной"
        unit_of_measurement: '%'
        value_template: "{{ state_attr('binary_sensor.xiaomi_water_leak_2_bedroom_158d0004a08155', 'battery_level') }}"
        device_class: battery
  - platform: template
    sensors:
      xiaomi_water_leak_cloakroom_battery:
        friendly_name: "Заряд в датчике протечки в гардеробе"
        unit_of_measurement: '%'
        value_template: "{{ state_attr('binary_sensor.xiaomi_water_leak_cloakroom_158d0004a06fa3', 'battery_level') }}"
        device_class: battery
  - platform: template
    sensors:
      xiaomi_water_leak_corridor_battery:
        friendly_name: "Заряд датчика протечки в стояке"
        unit_of_measurement: '%'
        value_template: "{{ state_attr('binary_sensor.xiaomi_water_leak_corridor_158d0004a07f44', 'battery_level') }}"
        device_class: battery
  - platform: template
    sensors:
      xiaomi_water_leak_livingroom_battery:
        friendly_name: "Заряд в датчике протечки на кухне"
        unit_of_measurement: '%'
        value_template: "{{ state_attr('binary_sensor.xiaomi_water_leak_livingroom_158d0004a06f5d', 'battery_level') }}"
        device_class: battery
  - platform: template
    sensors:
      xiaomi_water_leak_livingroom_2_battery:
        friendly_name: "Заряд в датчике протечки на кухне (пол)"
        unit_of_measurement: '%'
        value_template: "{{ state_attr('binary_sensor.xiaomi_water_leak_livingroom_2_158d000477651e', 'battery_level') }}"
        device_class: battery
  - platform: template
    sensors:
      xiaomi_motion_bathroom_battery:
        friendly_name: "Заряд в датчике движения в ванной"
        unit_of_measurement: '%'
        value_template: "{{ state_attr('binary_sensor.xiaomi_motion_bathroom_158d0002b6e8e6', 'battery_level') }}"
        device_class: battery
  - platform: template
    sensors:
      xiaomi_smoke_kitchen_battery:
        friendly_name: "Заряд в датчике дыма на кухне"
        unit_of_measurement: '%'
        value_template: "{{ state_attr('binary_sensor.xiaomi_smoke_kitchen_158d00028229a1', 'battery_level') }}"
        device_class: battery
## Увлажнитель ##
  - platform: template
    sensors:
      xiaomi_humidifier_bedroom_water_level:
        friendly_name: "Уровень воды в увлажнителе (спальня)"
        unit_of_measurement: '%'
        value_template: "{{ [state_attr('fan.xiaomi_humidifier_bedroom', 'depth') / 1.2, 100] | min | int }}"
        icon_template: "mdi:cup"
  - platform: template
    sensors:
      xiaomi_humidifier_livingroom_1_water_level:
        friendly_name: "Уровень воды в увлажнителе (гостиная 1)"
        unit_of_measurement: '%'
        value_template: "{{ [state_attr('fan.xiaomi_humidifier_livingroom_1', 'depth') / 1.2, 100] | min | int }}"
        icon_template: "mdi:cup"
  - platform: template
    sensors:
      xiaomi_humidifier_livingroom_2_water_level:
        friendly_name: "Уровень воды в увлажнителе (гостиная 2)"
        unit_of_measurement: '%'
        value_template: "{{ [state_attr('fan.xiaomi_humidifier_livingroom_2', 'depth') / 1.2, 100] | min | int }}"
        icon_template: "mdi:cup"


###
### Switches ###

switch:
# Xiaomi humidifier dry mode switch
## Увлажнитель в спальне
  - platform: template
    switches:
      xiaomi_humidifier_bedroom_dry_mode:
        friendly_name: "Режим DRY в увлажнителе в спальне"
        value_template: "{{ is_state_attr('fan.xiaomi_humidifier_bedroom', 'dry', true) }}"
        turn_on:
          service: xiaomi_miio.fan_set_dry_on 
          data:
            entity_id: fan.xiaomi_humidifier_bedroom
        turn_off:
          service: xiaomi_miio.fan_set_dry_off 
          data:
            entity_id: fan.xiaomi_humidifier_bedroom
  - platform: template
    switches:
      xiaomi_humidifier_bedroom_child_lock:
        friendly_name: "Режим защиты от детей в увлажнителе в спальне"
        value_template: "{{ is_state_attr('fan.xiaomi_humidifier_bedroom', 'child_lock', true) }}"
        turn_on:
          service: xiaomi_miio.fan_set_child_lock_on 
          data:
            entity_id: fan.xiaomi_humidifier_bedroom
        turn_off:
          service: xiaomi_miio.fan_set_child_lock_off 
          data:
            entity_id: fan.xiaomi_humidifier_bedroom
## Увлажнитель в гостиной 1
  - platform: template
    switches:
      xiaomi_humidifier_livingroom_1_dry_mode:
        friendly_name: "Режим DRY в увлажнителе в гостиной 1"
        value_template: "{{ is_state_attr('fan.xiaomi_humidifier_livingroom_1', 'dry', true) }}"
        turn_on:
          service: xiaomi_miio.fan_set_dry_on 
          data:
            entity_id: fan.xiaomi_humidifier_livingroom_1
        turn_off:
          service: xiaomi_miio.fan_set_dry_off 
          data:
            entity_id: fan.xiaomi_humidifier_livingroom_1
  - platform: template
    switches:
      xiaomi_humidifier_livingroom_1_child_lock:
        friendly_name: "Режим защиты от детей в увлажнителе в гостиной 1"
        value_template: "{{ is_state_attr('fan.xiaomi_humidifier_livingroom_1', 'child_lock', true) }}"
        turn_on:
          service: xiaomi_miio.fan_set_child_lock_on 
          data:
            entity_id: fan.xiaomi_humidifier_livingroom_1
        turn_off:
          service: xiaomi_miio.fan_set_child_lock_off 
          data:
            entity_id: fan.xiaomi_humidifier_livingroom_1
## Увлажнитель в гостиной 2
  - platform: template
    switches:
      xiaomi_humidifier_livingroom_2_dry_mode:
        friendly_name: "Режим DRY в увлажнителе в гостиной 2"
        value_template: "{{ is_state_attr('fan.xiaomi_humidifier_livingroom_2', 'dry', true) }}"
        turn_on:
          service: xiaomi_miio.fan_set_dry_on 
          data:
            entity_id: fan.xiaomi_humidifier_livingroom_2
        turn_off:
          service: xiaomi_miio.fan_set_dry_off 
          data:
            entity_id: fan.xiaomi_humidifier_livingroom_2
  - platform: template
    switches:
      xiaomi_humidifier_livingroom_2_child_lock:
        friendly_name: "Режим защиты от детей в увлажнителе в гостиной 2"
        value_template: "{{ is_state_attr('fan.xiaomi_humidifier_livingroom_2', 'child_lock', true) }}"
        turn_on:
          service: xiaomi_miio.fan_set_child_lock_on 
          data:
            entity_id: fan.xiaomi_humidifier_livingroom_2
        turn_off:
          service: xiaomi_miio.fan_set_child_lock_off 
          data:
            entity_id: fan.xiaomi_humidifier_livingroom_2

###
### Input selects ###

input_select:
# Humidifier mode bedroom
  xiaomi_humidifier_bedroom_mode:
    name: "Режим работы увлажнителя в спальне"
    options:
      - silent
      - medium
      - high
      - auto
    icon: mdi:concourse-ci
# Humidifier mode livingroom 1
  xiaomi_humidifier_livingroom_1_mode:
    name: "Режим работы увлажнителя 1 в гостиной"
    options:
      - silent
      - medium
      - high
      - auto
    icon: mdi:concourse-ci
# Humidifier mode livingroom 2
  xiaomi_humidifier_livingroom_2_mode:
    name: "Режим работы увлажнителя 2 в гостиной"
    options:
      - silent
      - medium
      - high
      - auto
    icon: mdi:concourse-ci

###
### Input numbers ###

input_number:
# Humidifier target humidity bedroom
  xiaomi_humidifier_bedroom_target_hum:
    name: "Целевая влажность в спальне"
    unit_of_measurement: '%'
    min: 30
    max: 80
    step: 10
    mode: slider
    icon: mdi:water-percent
# Humidifier target humidity bedroom
  xiaomi_humidifier_livingroom_target_hum:
    name: "Целевая влажность в гостиной"
    unit_of_measurement: '%'
    min: 30
    max: 80
    step: 10
    mode: slider
    icon: mdi:water-percent


# balcony auto heater
  auto_heater_balcony_day_temp_min: # Min temp in balcony during day
    name: "Min T днем на балконе"
    unit_of_measurement: '°C'
    min: 0
    max: 30
    step: 1
    mode: slider
    icon: mdi:thermometer
  auto_heater_balcony_night_temp_min: # Min temp in balcony during night
    name: "Min T ночью на балконе (авто)"
    unit_of_measurement: '°C'
    min: 0
    max: 30
    step: 1
    mode: slider
    icon: mdi:thermometer
  auto_heater_balcony_temp_range: # Range of temperature (min + range)
    name: "Диапазон T на балконе (авто, min +)"
    unit_of_measurement: '°C'
    min: 2
    max: 10
    step: 1
    mode: slider
    icon: mdi:thermometer-lines

###
### Input booleans ###

input_boolean:
# Auto light in bathroom
  auto_light_bedroom_switch:
    name: "Авто подсветка в ванной"
    icon: mdi:brightness-auto
# balcony auto heater
  auto_heater_balcony_switch:
    name: "Авто подогрев балкона"
    icon: mdi:auto-upload
# curtain auto control
  auto_curtain_bedroom_switch:
    name: "Авто управление шторами"
    icon: mdi:alpha-a-box-outline

###
### Input datetimes ###

input_datetime:
# Управление шторами
  curtain_bedroom_time_weekday_open:
    name: "Открытие шторы в будни"
    has_time: true
  curtain_bedroom_time_weekday_close:
    name: "Закрытие шторы в будни"
    has_time: true
  curtain_bedroom_time_weekend_open:
    name: "Открытие шторы в выходные"
    has_time: true
  curtain_bedroom_time_weekend_close:
    name: "Закрытие шторы в выходные"
    has_time: true

###
### Climate ###

climate:
# Thermostat in balcony
  - platform: generic_thermostat
    name: thermostat_balcony
    heater: switch.plug_158d00032d5e8b
    target_sensor: sensor.xiaomi_thp_temperature_balcony_158d0002389f84
    min_temp: 1
    max_temp: 30
    ac_mode: false
    target_temp: 10
    cold_tolerance: 1.0
    hot_tolerance: 1.0
    min_cycle_duration:
      minutes: 10
    initial_hvac_mode: "heat"
    away_temp: 3

###
### Automations ###

automation:
# Xiaomi Humidifier mode bedroom
  - alias: Xiaomi Humidifier bedroom mode changed in HA
    trigger:
      entity_id: input_select.xiaomi_humidifier_bedroom_mode
      platform: state
    condition:
      condition: template
      value_template: "{{ (state_attr('fan.xiaomi_humidifier_bedroom', 'mode')) != (states('input_select.xiaomi_humidifier_bedroom_mode')) }}"
    action:
      service: fan.set_speed
      data_template:
        entity_id: fan.xiaomi_humidifier_bedroom
        speed: "{{ states('input_select.xiaomi_humidifier_bedroom_mode') }}"
  - alias: Xiaomi Humidifier mode changed
    trigger:
      platform: state
      entity_id: fan.xiaomi_humidifier_bedroom
    condition:
      condition: template
      value_template: "{{ (state_attr('fan.xiaomi_humidifier_bedroom', 'mode')) != (states('input_select.xiaomi_humidifier_bedroom_mode')) }}"
    action:
      service: input_select.select_option
      entity_id: input_select.xiaomi_humidifier_bedroom_mode
      data_template:
        option: "{{ state_attr('fan.xiaomi_humidifier_bedroom', 'mode') }}"
# Xiaomi Humidifier mode livingroom 1
  - alias: Xiaomi Humidifier livingroom 1 mode changed in HA
    trigger:
      entity_id: input_select.xiaomi_humidifier_livingroom_1_mode
      platform: state
    condition:
      condition: template
      value_template: "{{ (state_attr('fan.xiaomi_humidifier_livingroom_1', 'mode')) != (states('input_select.xiaomi_humidifier_livingroom_1_mode')) }}"
    action:
      service: fan.set_speed
      data_template:
        entity_id: fan.xiaomi_humidifier_livingroom_1
        speed: "{{ states('input_select.xiaomi_humidifier_livingroom_1_mode') }}"
  - alias: Xiaomi Humidifier mode changed
    trigger:
      platform: state
      entity_id: fan.xiaomi_humidifier_livingroom_1
    condition:
      condition: template
      value_template: "{{ (state_attr('fan.xiaomi_humidifier_livingroom_1', 'mode')) != (states('input_select.xiaomi_humidifier_livingroom_1_mode')) }}"
    action:
      service: input_select.select_option
      entity_id: input_select.xiaomi_humidifier_livingroom_1_mode
      data_template:
        option: "{{ state_attr('fan.xiaomi_humidifier_livingroom_1', 'mode') }}"
# Xiaomi Humidifier mode livingroom 2
  - alias: Xiaomi Humidifier livingroom 2 mode changed in HA
    trigger:
      entity_id: input_select.xiaomi_humidifier_livingroom_2_mode
      platform: state
    condition:
      condition: template
      value_template: "{{ (state_attr('fan.xiaomi_humidifier_livingroom_2', 'mode')) != (states('input_select.xiaomi_humidifier_livingroom_2_mode')) }}"
    action:
      service: fan.set_speed
      data_template:
        entity_id: fan.xiaomi_humidifier_livingroom_2
        speed: "{{ states('input_select.xiaomi_humidifier_livingroom_2_mode') }}"
  - alias: Xiaomi Humidifier mode changed
    trigger:
      platform: state
      entity_id: fan.xiaomi_humidifier_livingroom_2
    condition:
      condition: template
      value_template: "{{ (state_attr('fan.xiaomi_humidifier_livingroom_2', 'mode')) != (states('input_select.xiaomi_humidifier_livingroom_2_mode')) }}"
    action:
      service: input_select.select_option
      entity_id: input_select.xiaomi_humidifier_livingroom_2_mode
      data_template:
        option: "{{ state_attr('fan.xiaomi_humidifier_livingroom_2', 'mode') }}"
# Xiaomi Humidifier bedroom target humidity
  - alias: Xiaomi Humidifier bedroom target humidity
    trigger:
      entity_id: input_number.xiaomi_humidifier_bedroom_target_hum
      platform: state
    action:
      service: xiaomi_miio.fan_set_target_humidity
      data_template:
        entity_id: fan.xiaomi_humidifier_bedroom
        humidity: "{{ (states('input_number.xiaomi_humidifier_bedroom_target_hum')) | int }}"
# Xiaomi Humidifier livingroom target humidity
  - alias: Xiaomi Humidifier livingroom target humidity
    trigger:
      entity_id: input_number.xiaomi_humidifier_livingroom_target_hum
      platform: state
    action:
      - service: xiaomi_miio.fan_set_target_humidity
        data_template:
          entity_id: fan.xiaomi_humidifier_livingroom_1
          humidity: "{{ (states('input_number.xiaomi_humidifier_livingroom_target_hum')) | int }}"
      - service: xiaomi_miio.fan_set_target_humidity
        data_template:
          entity_id: fan.xiaomi_humidifier_livingroom_2
          humidity: "{{ (states('input_number.xiaomi_humidifier_livingroom_target_hum')) | int }}"
#      - service: xiaomi_miio.fan_set_target_humidity
#        data:
#          entity_id: fan.xiaomi_humidifier_livingroom_1
#          humidity: "{{ (states('input_number.xiaomi_humidifier_livingroom_target_hum')) | int }}"
#      - service: xiaomi_miio.fan_set_target_humidity
#        data:
#          entity_id: fan.xiaomi_humidifier_livingroom_2
#          humidity: "{{ (states('input_number.xiaomi_humidifier_livingroom_target_hum')) | int }}"